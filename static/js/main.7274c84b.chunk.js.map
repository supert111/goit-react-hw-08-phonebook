{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","redux/auth/auth-reducer.js","components/UserMenu/UserMenu.module.css","components/Container/Container.js","redux/contacts/contacts-reducer.js","redux/auth/auth-actions.js","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/contacts/contacts-actions.js","components/routes.js","components/Navigation/Navigation.jsx","components/AuthNav/AuthNav.jsx","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","response","registerSuccess","data","registerError","message","logOut","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","getIsAuthenticated","state","isAuthenticated","getUsername","user","name","module","exports","initialUserState","email","createReducer","_","payload","setError","error","combineReducers","Container","children","className","styles","container","contacts","fetchContactSuccess","addContactSuccess","find","contact","alert","number","deleteContactSuccess","filter","id","loading","fetchContactRequest","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","searchByFilter","createAction","routes","home","login","connect","authSelectors","exact","to","nav_link","activeClassName","nav_link_active","AuthNav","Registr","mapDispatchToProps","onLogout","authOperations","Login","title","login_name","Button","variant","size","type","onClick","AppBar","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","NotFoundView","App","this","onGetCurretnUser","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","persistReducer","authReduser","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7274c84b.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport authActions  from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`; //Bearer - носитель\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nexport const register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n        dispatch(authActions.registerSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authActions.registerError(error.message));\r\n    }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nexport default {\r\n    getIsAuthenticated,\r\n    getUsername,\r\n  };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_link\":\"AuthNav_nav_link__H5a9h\",\"nav_link_active\":\"AuthNav_nav_link_active__13zsX\",\"Registr\":\"AuthNav_Registr__1yFqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_link\":\"Navigation_nav_link__3707_\",\"nav_link_active\":\"Navigation_nav_link_active__1L8c0\"};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"UserMenu_title__2Yrk3\",\"Login\":\"UserMenu_Login__JmdTS\",\"login_name\":\"UserMenu_login_name__27FR1\"};","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\r\n\r\nexport default Container;","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    addContactSuccess,\r\n    addContactRequest,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    searchByFilter\r\n} from '../contacts/contacts-actions';\r\n\r\nconst contacts = createReducer([], \r\n    {[fetchContactSuccess]:(_, { payload }) => payload, \r\n    [addContactSuccess]: (state, { payload }) => {\r\n        const duplicateName = state.find(contact => contact.name === payload.name);\r\n        \r\n        if(duplicateName) {\r\n            alert(`${payload.name} is already in contacts.`);\r\n            return state;\r\n        }\r\n\r\n        if(payload.name === \"\") {\r\n            alert(`Please fill out the form it is empty.`);\r\n            return state;\r\n        }\r\n\r\n        if(payload.number === \"\") {\r\n            alert(`Please fill out the form with your phone number, it is empty.`);\r\n            return state;\r\n        }\r\n\r\n        return [payload, ...state,];\r\n    },\r\n    [deleteContactSuccess]: (state, { payload }) => (state.filter(({id}) => id !== payload)),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [searchByFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContactError]: (_, { payload }) => payload,\r\n    [addContactError]: (_, { payload }) => payload,\r\n    [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n    loading,\r\n    error,\r\n})","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n  };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2b5ig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__123a0\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const searchByFilter = createAction('contacts/SearchByFilter');\r\n","const routes = {\r\n    home: \"/\",\r\n    contacts: \"/contacts\",\r\n    register: \"/register\",\r\n    login: \"/login\",\r\n}\r\n\r\nexport default routes;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../routes';\r\nimport styles from './Navigation.module.css';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n    <nav>\r\n        <NavLink exact \r\n            to={routes.home}\r\n            className={styles.nav_link}\r\n            activeClassName={styles.nav_link_active}>\r\n            Home\r\n        </NavLink>\r\n        \r\n        {isAuthenticated && (\r\n            <NavLink \r\n                to={routes.contacts}\r\n                className={styles.nav_link}\r\n                activeClassName={styles.nav_link_active}>\r\n                Contacts\r\n            </NavLink>\r\n        )}\r\n\r\n    </nav>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../routes';\r\nimport styles from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => (\r\n    <nav className={styles.Registr}>\r\n        <NavLink exact \r\n        to={routes.register}\r\n        className={styles.nav_link}\r\n        activeClassName={styles.nav_link_active}>\r\n            Registration\r\n        </NavLink>\r\n        <NavLink \r\n        to={routes.login}\r\n        className={styles.nav_link}\r\n        activeClassName={styles.nav_link_active}>\r\n            Login\r\n        </NavLink>\r\n    </nav>\r\n)\r\n\r\nexport default AuthNav;","import { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\nimport styles from './UserMenu.module.css';\r\nimport {authSelectors, authOperations} from '../../redux/auth';\r\n\r\n\r\nconst UserMenu = ({name, onLogout}) => (\r\n    <div className={styles.Login}>\r\n        <span className={styles.title}>Welcome, <span className={styles.login_name}>{name}</span></span>\r\n        <Button variant=\"warning\" size=\"sm\" type=\"button\" onClick={onLogout}>\r\n            Logout\r\n        </Button>{' '}\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    name: authSelectors.getUsername(state),\r\n  });\r\n  \r\n  const mapDispatchToProps = {\r\n    onLogout: authOperations.logOut,\r\n  };\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import { connect } from 'react-redux';\r\nimport Container from '../../components/Container';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport AuthNav from '../AuthNav/AuthNav';\r\nimport styles from '../AppBar/AppBar.module.css';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport {authSelectors} from '../../redux/auth';\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  return (      \r\n    <Container>\r\n      <header className={styles.AppBar}>\r\n        <Navigation />\r\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}     \r\n      </header>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    //если render надо прокидывать props\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport AppBar from './components/AppBar';\r\n//import LoginView from \"./views/LoginView/index\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport routes from './components/routes';\r\nimport {authOperations} from './redux/auth';\r\nimport { connect } from 'react-redux';\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport PublicRoute from \"./components/PublicRoute\";\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\nconst ContactsView = lazy(() => import('./views/ContactsView'));\r\nconst NotFoundView = lazy(() => \r\n    import('./views/NotFoundView' /* webpackChunkName: \"page-404-view\" */)\r\n);\r\n\r\nclass App extends Component { \r\n\r\n    componentDidMount() {\r\n        this.props.onGetCurretnUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AppBar />\r\n            \r\n                <Suspense fallback={<p>Loading...</p>}>\r\n                    <Switch>\r\n                        <PublicRoute exact path={routes.home} component={HomeView} />\r\n                        <PrivateRoute path={routes.contacts} component={ContactsView} redirectTo={routes.login}/>\r\n                        <PublicRoute path={routes.register} restricted component={RegisterView} redirectTo={routes.contacts}/>\r\n                        <PublicRoute path={routes.login} restricted component={LoginView} redirectTo={routes.contacts}/>\r\n                        <PublicRoute component={NotFoundView} />\r\n                    </Switch>\r\n                </Suspense>\r\n            </>\r\n        )\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = {\r\n    onGetCurretnUser: authOperations.getCurrentUser,\r\n  };\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { \r\n  persistStore,\r\n  persistReducer, \r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER, \r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport authReduser from './auth/auth-reducer';\r\nimport logger from 'redux-logger';\r\n\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  }, \r\n}), logger]\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: { state: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReduser) },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store, persistor};","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={'loading'} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}